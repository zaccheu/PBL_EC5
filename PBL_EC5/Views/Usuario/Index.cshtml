@using Microsoft.AspNetCore.Http
@using PBL_EC5.Controllers
@inject IHttpContextAccessor HttpContextAccessor
@model List<UsuarioViewModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAdm = HelperControllers.VerificaAdm(HttpContextAccessor.HttpContext.Session);
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/css/cadastro.css" />

<div class="text-center">
    <h2 class="mt-4 text-center">Consulta de Usuários</h2><br />

    <div class="formLogin paddingCadastro mx-auto w-75 mb-4">
        <form id="filtroUsuarios" class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Nome" class="control-label">Nome</label>
                    <input class="input_form form-control" type="text" name="Nome" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Cpf" class="control-label">CPF</label>
                    <input class="input_form form-control" type="text" name="Cpf" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Email" class="control-label">Email</label>
                    <input class="input_form form-control" type="email" name="Email" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Administrador" class="control-label">Administrador</label>
                    <select class="form-control input_form" name="Administrador">
                        <option value="">Todos</option>
                        <option value="Nao">Não</option>
                        <option value="Sim">Sim</option>
                    </select>
                </div>
            </div>
            <div class="col-12 text-center mt-3 mb-2">
                <button type="button" class="btn btn_limpar" id="btnLimpar">LIMPAR</button>
                <button type="button" class="btn btn_pesquisar mx-2" id="btnPesquisar">PESQUISAR</button>
                <a class="btn btn_novo" asp-controller="Usuario" asp-action="Cadastrar">NOVO</a>
            </div>
        </form>
    </div>

    <div class="formLogin paddingCadastro mx-auto w-75">
        <div class="table-responsive m-2">
            <table class="table text-center">
                <thead class="head">
                    <tr>
                        <th>Nome</th>
                        <th>E-mail</th>
                        <th>CPF</th>
                        <th>Administrador</th>
                        @if (isAdm)
                        {
                            <th>Ações</th>
                        }
                    </tr>
                </thead>
                <tbody id="usuarios-tbody">
                    @if (Model.Count > 0)
                    {
                        @foreach (var usuario in Model)
                        {
                            <tr class="body">
                                <td>@usuario.Nome</td>
                                <td>@usuario.Email</td>
                                <td>@usuario.Cpf</td>
                                <td>
                                    @Html.Raw(usuario.Administrador == TipoAdministrador.Sim ? "<span class=\"bi bi-check-lg\"></span>" : "")
                                    </td>
                                @if (isAdm)
                                {
                                    <td>
                                        <a asp-controller="Usuario" asp-action="Editar" asp-route-id="@usuario.Id">
                                            <span class="bi bi-pencil"></span>
                                        </a>
                                        <a asp-controller="Usuario" asp-action="Deletar" asp-route-id="@usuario.Id" asp-route-isUsuario="true"
                                           onclick="return confirm('Tem certeza que deseja deletar este usuário? Todos os clientes sob responsabilidade dele serão desvinculados.');">
                                            <span class="bi bi-x-lg"></span>
                                        </a>
                                    </td>
                                }
                            </tr>
                        }
                    }
                    else
                    {
                        <tr class="body">
                            <td colspan="5">Nenhum registro encontrado</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var btnPesquisar = document.getElementById('btnPesquisar');
        if (btnPesquisar) {
            btnPesquisar.addEventListener('click', function (e) {
                e.preventDefault();
                var formData = $('#filtroUsuarios').serialize();
                $.ajax({
                    url: '/Usuario/Pesquisar',
                    type: 'POST',
                    data: formData,
                    success: function (html) {
                        $('#usuarios-tbody').html(html);
                    }
                });
            });
        }

        var btnLimpar = document.getElementById('btnLimpar');
        if (btnLimpar) {
            btnLimpar.addEventListener('click', function (e) {
                e.preventDefault();
                // Limpa todos os campos do formulário
                $('#filtroUsuarios')[0].reset();
            });
        }

        const cpfInput = document.querySelector("input[name='Cpf']");
        // Verifica se o elemento foi encontrado antes de adicionar o event listener
        if (cpfInput) {
            cpfInput.addEventListener('input', function (e) {
                let value = e.target.value.replace(/\D/g, ''); // Remove tudo que não é dígito
                const maxLength = 11;
                value = value.substring(0, maxLength); // Limita ao número máximo de dígitos do CPF

                if (value.length > 9) { // Para 10 ou 11 dígitos
                    // Regex corrigido: (\d{1,2}) no final para capturar o(s) dígito(s) verificador(es)
                    value = value.replace(/(\d{3})(\d{3})(\d{3})(\d{1,2})/, '$1.$2.$3-$4');
                } else if (value.length > 6) { // Para 7, 8 ou 9 dígitos
                    value = value.replace(/(\d{3})(\d{3})(\d{1,3})/, '$1.$2.$3');
                } else if (value.length > 3) { // Para 4, 5 ou 6 dígitos
                    value = value.replace(/(\d{3})(\d{1,3})/, '$1.$2');
                }
                // Para 1, 2 ou 3 dígitos, não fazemos nada além de remover não-dígitos e aplicar o primeiro ponto se necessário.

                e.target.value = value;
            });
        }

    });
</script>
